<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips on 安迪兒隨手貼</title>
    <link>https://bowwow.tips/categories/tips/</link>
    <description>Recent content in Tips on 安迪兒隨手貼</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;#169; by 安迪兒</copyright>
    <lastBuildDate>Wed, 01 Jun 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://bowwow.tips/categories/tips/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>匯入匯出MongoDB資料成JSON CSV檔案</title>
      <link>https://bowwow.tips/post/20160601/</link>
      <pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bowwow.tips/post/20160601/</guid>
      <description>

&lt;p&gt;前陣子安迪兒剛好碰到要匯出mongodb資料&lt;br /&gt;
需要轉csv給其它人員使用&lt;br /&gt;
查了一下，發現mongodb直接有支援資料匯出成json、csv格式&lt;br /&gt;
(超強XD)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;兩者的區別：&lt;/strong&gt;&lt;br /&gt;
- JSON 是 mongoexport 默認的匯出格式，不需要指定&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSV 格式需要明確指定欄位屬性名&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一般大多使用json，特殊需求像是需要用到excel之類的文件編輯的，會比較偏向使用csv格式。&lt;br /&gt;
參考以下官方文件&lt;/p&gt;

&lt;p&gt;[mongoexport]&lt;br /&gt;
&lt;a href=&#34;https://docs.mongodb.com/master/reference/program/mongoexport&#34;&gt;https://docs.mongodb.com/master/reference/program/mongoexport&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[mongoimport]&lt;br /&gt;
&lt;a href=&#34;https://docs.mongodb.com/manual/reference/program/mongoimport/#use&#34;&gt;https://docs.mongodb.com/manual/reference/program/mongoimport/#use&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安迪兒貼一下用的指令&lt;/p&gt;

&lt;h3 id=&#34;匯出:66a2e7b2879656754f6525910eaf4d0e&#34;&gt;匯出:&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;mongodb collection指定欄位匯出資料轉csv&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mongoexport --host localhost --db xxdata --collection unknown_data --username xx --password xx --csv --out text.csv --fields _id,lang,pinyin,artists,phonetic,hash_code,created_at,title,vocal_track,filename,hash_method,words
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;mongodb collection資料匯出轉json&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mongoexport --host localhost -d xxdata -c unknown_songs -u xxuser -p xxpassword -o output.json

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/FP6y0y&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;h3 id=&#34;匯入:66a2e7b2879656754f6525910eaf4d0e&#34;&gt;匯入:&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;測試一下匯入&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mongoimport  --host localhost --db xxdata --collection test --username xx --password xx --type csv --headerline --file ./text.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/54DixU&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;以上~~收工嘍!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>關於MongoDB設定權限</title>
      <link>https://bowwow.tips/post/20160531/</link>
      <pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bowwow.tips/post/20160531/</guid>
      <description>&lt;p&gt;大家在使用MongoDB，裝完預設其實是沒設定權限的&lt;br /&gt;
因為MongoDB預設你不會對外開放&lt;br /&gt;
一般是會鎖定只給api的機器讀取資料&lt;br /&gt;
但…有資料庫就一定會有權限&lt;br /&gt;
所以遇上要使用帳號密碼登入時要怎辦&lt;br /&gt;
這邊安迪兒記錄一下使用的方式&lt;br /&gt;
大至分為幾個步驟&lt;br /&gt;
1、設定一個管權限的使用者&lt;br /&gt;
2、設定要開放MongoDB的使用者
3、關掉MongoDB，改換用權限啟動的參數，重新啟動MongoDB&lt;/p&gt;

&lt;p&gt;1.首先登入MongoDB&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mongo  
use admin ;
db.createUser(
{
user: &amp;quot;xx&amp;quot;,
pwd: &amp;quot;xx&amp;quot;,
roles: [ { role: &amp;quot;userAdminAnyDatabase&amp;quot;, db: &amp;quot;metadata&amp;quot; } ]
}
);
show users;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.再來設定一下要開放帳號密碼的metadata db&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;use metadata;
{
user: &amp;quot;xx&amp;quot;,
pwd: &amp;quot;xx&amp;quot;,
roles: [ { role: &amp;quot;dbOwner&amp;quot;, db: &amp;quot;metadata&amp;quot; } ]
};
show users;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/H8RmtH&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;弄完了就下exit離開MongoDB的shell吧&lt;br /&gt;
查一下mongo的process&lt;br /&gt;
然後kill它&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ps aux | grep mongo
sudo kill xxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.最後重啟一下MongoDB，帶上權限的參數，完成嘍 !&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mongod --auth
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;試一下帳號是否可登入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mongo --port 27017 -u &amp;quot;xx&amp;quot; -p &amp;quot;xx&amp;quot; --authenticationDatabase &amp;quot;admin&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/uPPmL9&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;另外記錄一下admin資料庫的其它特殊權限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;readAnyDatabase &amp;gt; 讀取所有資料庫
readWriteAnyDatabase &amp;gt; 讀寫所有資料庫
userAdminAnyDatabase &amp;gt; 管理所有資料庫使用者
dbAdminAnyDatabase &amp;gt; 所有資料庫的管理者
root &amp;gt; 最高權限
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上~~收工嘍!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PostgreSQL的備份與復原</title>
      <link>https://bowwow.tips/post/20160530/</link>
      <pubDate>Mon, 30 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bowwow.tips/post/20160530/</guid>
      <description>&lt;p&gt;安迪兒最較常用到PostgreSQL備資料倒資料&lt;br /&gt;
記錄一下操作的方式&lt;/p&gt;

&lt;p&gt;1、備份data&lt;br /&gt;
PostgreSQL內建使用&lt;strong&gt;pg_dump&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pg_dump [資料庫名] -U [帳號] -f [備份檔案.sql]

另一種備份整個db的  
 pg_dump -h x.x.x.x -p 5432 -U admin -F c -b -v -f &amp;quot;xx.dbf&amp;quot; xxdatabase
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;pg_dump meta_development -U posxxx -f postgres-db-20160530.sql  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/LEwRb1&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;2、還原
PostgreSQL內建使用&lt;strong&gt;psql&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;psql -f [備份檔案名稱] [資料庫] [帳號]  

還原整個db的   
pg_restore -h x.x.x.x -p 5432 -U admin -d xxdatabase -v &amp;quot;xx.dbf&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;psql -f xx.sql test posxxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/CL69Hh&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;看一下是不是有把資料回灌到test database了&lt;br /&gt;
嗯~~資料已經進去原來的test嘍&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/ExCJDm&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;其它:設定不輸入密碼&lt;br /&gt;
1.  /etc/profile.local 加上&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PGPASSWORD=&amp;quot;密碼&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;使用者的家目錄($HOME)下，新增一個.pgpass檔&lt;br /&gt;
&lt;code&gt;
hostname:port:database:username:password   
&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;差別是第2種可以指定特定的database不輸入密碼&lt;/p&gt;

&lt;p&gt;以上~~收工嘍!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Qnap nas掛上遠端Synology磁碟資料</title>
      <link>https://bowwow.tips/post/20160518/</link>
      <pubDate>Wed, 18 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bowwow.tips/post/20160518/</guid>
      <description>&lt;p&gt;安迪兒新的qnap NAS剛整理完所有資料，&lt;br /&gt;
剩下一些新的資料都放在原舊的Synology nas上&lt;/p&gt;

&lt;p&gt;安迪兒想掛上別台nas的samba磁區，然後再對拷檔案&lt;br /&gt;
但…安迪兒發現，qnap的nas怎麼設定都沒辦法掛上Synology的samba磁碟&lt;br /&gt;
～囧&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/E8n9kz&#34; width=&#34;70%&#34;&gt;&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/mhh1rD&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;查了一下，發現好像有人有反應這件事~XD&lt;/p&gt;

&lt;p&gt;安迪兒試了一下發現可以直接用指令mount上Synology的samba磁碟資料&lt;br /&gt;
貼一下過程&lt;/p&gt;

&lt;p&gt;首先SSH登入nas&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh admin@x.x.x.x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找個資料匣準備掛上別台nas的samba&lt;br /&gt;
安迪兒這邊建了一個共用的資料匣叫tmp&lt;br /&gt;
裡面打算掛Synology的照片和電影2個資料匣&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /share/CACHEDEV1_DATA/tmp
mkdir video photo
mount.cifs //10.0.0.7/video -o user=xx password=xx
mount.cifs //10.0.0.7/photo -o user=xx password=xx  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/IK5ocL&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;掛完後使用nas上File Station打開資料匣，開始狂copy資料到新nas上吧&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/W9AdwQ&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;邊copy data邊看一下效能&lt;br /&gt;
嗯&amp;hellip;網路每秒約100MB，碟碟IOPS 快300&lt;br /&gt;
還ok啦&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://goo.gl/LgNJqj&#34; width=&#34;70%&#34;&gt;&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/tHGykJ&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;copy完資料後，新nas也差不多完整了&lt;br /&gt;
可以開心的接電視直播電影了&lt;br /&gt;
(有hdmi接電視的nas好讚呀~xd)&lt;/p&gt;

&lt;p&gt;以上~~收工嘍!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>拯救synology nas上raid1內接硬碟資料</title>
      <link>https://bowwow.tips/post/20160513/</link>
      <pubDate>Fri, 13 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bowwow.tips/post/20160513/</guid>
      <description>&lt;p&gt;有用nas的，早晚會碰到nas壞了或是啥不可預測的神之力&lt;br /&gt;
總之nas裡的硬碟多多少少會有機會碰到要外接讀取資料的機會&lt;/p&gt;

&lt;p&gt;安迪兒也不例外&lt;br /&gt;
某天安迪兒nas容量不夠，要買新的硬碟&lt;br /&gt;
因為安迪兒nas(ds213j)很慢&lt;br /&gt;
只有usb2傳輸，1g的網路，傳輸上限也只能到每秒30多MB&lt;br /&gt;
總之…備資料要超久的&lt;/p&gt;

&lt;p&gt;於是安迪兒把裡面的raid1拆一顆硬碟下來&lt;br /&gt;
拿到公司，想說外接公司nas把資料快速的備份出來&lt;br /&gt;
但…安迪兒天真的以為，raid1不就是2顆硬碟一模模一樣樣&lt;br /&gt;
隨便拿一顆接上硬碟外接盒，把裡面的檔案讀出來就好了。&lt;/p&gt;

&lt;p&gt;果然是事情沒想的那麼容易&lt;br /&gt;
硬碟外接後，不管接到電腦或nas都讀不到東西&lt;br /&gt;
最多只讀到加密的raid磁區&lt;/p&gt;

&lt;p&gt;安迪兒整個傻眼，深吸了一口氣&lt;br /&gt;
想著，那天…安迪兒的機器壞了，找不到同型號的
…就gg了嗎!!!&lt;br /&gt;
(這太蝦了吧!!)&lt;/p&gt;

&lt;p&gt;於是安迪兒在茫茫google海裡，研究了一下&lt;br /&gt;
找到了可能的方案，利用linux software raid的方式&lt;br /&gt;
弄個raid來試試讀資料&lt;br /&gt;
參考資料如下:&lt;br /&gt;
&lt;a href=&#34;http://web.mit.edu/rhel-doc/4/RH-DOCS/rhel-ig-s390-multi-zh_tw-4/s1-s390info-raid.html&#34;&gt;http://web.mit.edu/rhel-doc/4/RH-DOCS/rhel-ig-s390-multi-zh_tw-4/s1-s390info-raid.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Mdadm&#34;&gt;https://en.wikipedia.org/wiki/Mdadm&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://linux.die.net/man/8/mdadm&#34;&gt;http://linux.die.net/man/8/mdadm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;以下就是安迪兒整個修復的過程&lt;/p&gt;

&lt;p&gt;用usb外接盒裝上硬碟，接上公司的nas&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/W7Bcnv&#34; &gt;&lt;/p&gt;

&lt;p&gt;執行以下步驟&lt;/p&gt;

&lt;p&gt;1.修復原raid1 HDD&lt;br /&gt;
mdadm -A -R /dev/xxx /dev/xxx&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/1jtKCN&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;2.fdisk -l xx 找一下相關磁碟資訊&lt;br /&gt;
可以看一下Blocks的大小，猜一下大的是存資的磁區&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/fyjJnT&#34; width=&#34;70%&#34;&gt;&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/cnRqA5&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;3.建新目錄&lt;br /&gt;
mkdir /mnt/old_hdd&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/6SzuD4&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;4.把找到的md2掛到剛建的目錄裡&lt;br /&gt;
mount -t ext4 /dev/md2 /mnt/old_hdd/&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/Fi8mbK&#34; width=&#34;70%&#34;&gt;&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/jyifaF&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;5.開始copy資料吧，此時nas裡面應該讀的到資料了&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/Fi8mbK&#34; width=&#34;70%&#34;&gt;&lt;br /&gt;
&lt;img src=&#34;https://goo.gl/qpM7pj&#34; width=&#34;70%&#34;&gt;&lt;/p&gt;

&lt;p&gt;6.完成後&lt;br /&gt;
unmount資料匣&lt;br /&gt;
removed md virtual device&lt;/p&gt;

&lt;p&gt;全部用到的指令如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fdisk -l
mdadm -A -R /dev/md2 /dev/sde3
mkdir /mnt/old_hdd
mount -t ext4 /dev/md2 /mnt/old_hdd/
mount | grep ^/dev/md2
umount /mnt/old_hdd
mdadm -S /dev/md2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;到這邊…有沒發現一件事&lt;br /&gt;
其實所謂的raid，就是用software raid的方式弄的&lt;br /&gt;
如果是硬體晶片的話可能就解不出來了&lt;br /&gt;
有好有壞啦~XD&lt;/p&gt;

&lt;p&gt;另外，新的nas超快，用usb3，或是直接網路傳檔&lt;br /&gt;
每秒都有100mb以上的速度，真是差太多了。&lt;/p&gt;

&lt;p&gt;以上~~收工嘍!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MAC上 /dev/disk 與 /dev/rdisk 的差別 (解決 dd 過慢的問題)</title>
      <link>https://bowwow.tips/post/20160512/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://bowwow.tips/post/20160512/</guid>
      <description>&lt;p&gt;如果各位有在玩Raspberry pi或banana pi之類的東西&lt;br /&gt;
應該常常會用到讀寫img吧&lt;br /&gt;
一般要把映象檔整塊燒到sd卡裡面都用到&lt;br /&gt;
dd這個指令&lt;/p&gt;

&lt;p&gt;備份:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dd if=/dev/disk2 of=/xxx/path/disk2.img
    dd if=/dev/disk2 | gzip &amp;gt; /xxx/path/disk2.img.gz  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;還原:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dd bs=4M if=2014-01-07-wheezy-raspbian.img of=/dev/disk2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;大多數都是dd if=xxx of=/dev/disk
不過安迪兒有看到老外有用of=/dev/rdisk&lt;/p&gt;

&lt;p&gt;安迪兒好奇查了一下&lt;br /&gt;
原來rdisk是raw模式存取，接近kernel原生檔案系統效能&lt;br /&gt;
所以用這個寫sd卡會比通用的/dev/disk快很多&lt;br /&gt;
安迪兒試了之後覺的速度優很多&lt;/p&gt;

&lt;p&gt;指令如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dd if=xx.img of=/dev/rdisk  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;試試嘍~~&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>